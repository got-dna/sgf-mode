#+TILE: SGF-MODE - emacs-lisp package for GO game
#+OPTIONS: ^:{}
#+property: header-args+ :results none

* Installation
~sgf-mode~ requires Emacs version >= 26 and librsvg.

- Add to ~load-path~
  #+begin_src emacs-lisp
    (add-to-list 'load-path "~/git/sgf-mode")
    (require 'sgf-mode)
  #+end_src

- For latest Emacs, it can also be installed with ~use-package~:
  #+begin_src emacs-lisp
  (use-package sgf-mode
    :vc (:url https://github.com/RNAer/sgf-mode.git))
  #+end_src
* usage
** .sgf file and sgf-mode
- =C-c C-c=: draw the svg board for the current game
- =C-u C-c C-c=: initiate a new game and draw the board
- Once putting the cursor on the drawn svg board, =C-h b= shows all the key bindings for playing GO game on the board.
** sgf src block in org-mode
recommended workflow:
1. =C-c '= to edit the game in a separate buffer
2. in this separate buffer, ~sgf-mode~ is enabled
*** tangle file
- =C-c C-v t= to tangle all the games of sgf blocks to a single file;
- =C-u C-c C-v t= to tangle current sgf block only.
*** display game
- =C-c C-c= to display the game in the current sgf block.
- ~org-babel-execute-buffer~ (=C-c C-v b=) to display all the games in the org file.
* alternatives
- [[https://github.com/misohena/el-igo][igo-org]]: learned a lot from it
- [[https://github.com/eschulte/el-go][el-go]]
* TODO
- A pass move is shown as '[]' or alternatively as '[tt]' (only for boards <= 19x19), i.e. applications should be able to deal with both representations. '[tt]' is kept for compatibility with FF[3].
- In FF[4] it is possible to specify board sizes upto 52x52. In this case uppercase letters are used to represent points from 27-52, i.e. 'a'=1 ... 'z'=26 , 'A'=27 ... 'Z'=52
- sgf parser
- use unicode instead of svg item for marks (borrow from el-go)
- add validity check: 1. xy in the range of wxh
